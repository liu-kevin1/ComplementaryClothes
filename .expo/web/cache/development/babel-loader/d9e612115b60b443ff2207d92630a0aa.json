{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Spencer\\\\Documents\\\\GitHub\\\\ComplementaryClothes\\\\components\\\\CameraView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport * as Permissions from \"expo-permissions\";\nimport { Camera } from \"expo-camera\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar Clarifai = require(\"clarifai\");\n\nvar app = new Clarifai.App({\n  apiKey: \"df97b2c4d8824774985ab72ef6420510\"\n});\n\nvar CameraView = function (_React$Component) {\n  _inherits(CameraView, _React$Component);\n\n  var _super = _createSuper(CameraView);\n\n  function CameraView(props) {\n    var _this;\n\n    _classCallCheck(this, CameraView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasCameraPermission: null,\n      type: Camera.Constants.Type.back,\n      photoOptions: {\n        base64: true\n      },\n      user: _this.props.navigation.state.params.user\n    };\n    return _this;\n  }\n\n  _createClass(CameraView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              this.setState({\n                hasCameraPermission: status === \"granted\"\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"pictureAndPredict\",\n    value: function pictureAndPredict() {\n      var _this2 = this;\n\n      var picture;\n      return _regeneratorRuntime.async(function pictureAndPredict$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.camera) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(this.camera.takePictureAsync(this.state.photoOptions));\n\n            case 3:\n              picture = _context2.sent;\n              app.models.predict(Clarifai.APPAREL_MODEL, picture.base64).then(function (response) {\n                console.log(response[\"outputs\"][0][\"data\"][\"concepts\"][0][\"name\"]);\n\n                _this2.props.navigation.navigate(\"Confirmation\", {\n                  classification: response[\"outputs\"][0][\"data\"][\"concepts\"][0][\"name\"],\n                  user: _this2.state.user\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.statusBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }), React.createElement(Camera, {\n        style: {\n          flex: 1\n        },\n        type: this.state.type,\n        ref: function ref(_ref) {\n          _this3.camera = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"transparent\",\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          alignSelf: \"flex-end\",\n          alignItems: \"center\"\n        },\n        onPress: this.pictureAndPredict.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"md-camera\",\n        size: 100,\n        color: \"#33B8FF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return CameraView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  statusBar: {\n    width: \"100%\",\n    height: StatusBar.currentHeight,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#33B8FF\"\n  }\n});\nexport default CameraView;","map":{"version":3,"sources":["C:/Users/Spencer/Documents/GitHub/ComplementaryClothes/components/CameraView.js"],"names":["React","Permissions","Camera","Icon","Clarifai","require","app","App","apiKey","CameraView","props","state","hasCameraPermission","type","Constants","Type","back","photoOptions","base64","user","navigation","params","askAsync","CAMERA","status","setState","camera","takePictureAsync","picture","models","predict","APPAREL_MODEL","then","response","console","log","navigate","classification","catch","error","flex","styles","statusBar","ref","backgroundColor","flexDirection","alignSelf","alignItems","pictureAndPredict","bind","Component","StyleSheet","create","width","height","StatusBar","currentHeight","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { Camera } from \"expo-camera\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n\r\n\r\n// clarifai api setup\r\nconst Clarifai = require(\"clarifai\");\r\nconst app = new Clarifai.App({\r\n  apiKey: \"df97b2c4d8824774985ab72ef6420510\",\r\n});\r\n\r\nclass CameraView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hasCameraPermission: null,\r\n      type: Camera.Constants.Type.back,\r\n      photoOptions: {\r\n        base64: true,\r\n      },\r\n      user: this.props.navigation.state.params.user,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n    this.setState({ hasCameraPermission: status === \"granted\" });\r\n  }\r\n\r\n  async pictureAndPredict() {\r\n    if (this.camera) {\r\n      let picture = await this.camera.takePictureAsync(this.state.photoOptions);\r\n\r\n      app.models\r\n        .predict(Clarifai.APPAREL_MODEL, picture.base64)\r\n        .then((response) => {\r\n          console.log(response[\"outputs\"][0][\"data\"][\"concepts\"][0][\"name\"]);\r\n          this.props.navigation.navigate(\"Confirmation\", {\r\n            classification:\r\n              response[\"outputs\"][0][\"data\"][\"concepts\"][0][\"name\"],\r\n            user: this.state.user\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <SafeAreaView style={styles.statusBar}></SafeAreaView>\r\n        <Camera\r\n          style={{ flex: 1 }}\r\n          type={this.state.type}\r\n          ref={(ref) => {\r\n            this.camera = ref;\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: \"transparent\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              style={{ flex: 1, alignSelf: \"flex-end\", alignItems: \"center\" }}\r\n              onPress={this.pictureAndPredict.bind(this)}\r\n            >\r\n              <Icon name=\"md-camera\" size={100} color=\"#33B8FF\"></Icon>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Camera>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  statusBar: {\r\n    width: \"100%\",\r\n    height: StatusBar.currentHeight,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#33B8FF\",\r\n  },\r\n});\r\nexport default CameraView;\r\n"]},"metadata":{},"sourceType":"module"}