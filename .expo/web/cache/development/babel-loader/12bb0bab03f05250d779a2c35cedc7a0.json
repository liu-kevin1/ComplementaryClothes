{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Spencer\\\\Documents\\\\GitHub\\\\ComplementaryClothes\\\\components\\\\Confirmation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\n\nvar Confirmation = function (_React$Component) {\n  _inherits(Confirmation, _React$Component);\n\n  var _super = _createSuper(Confirmation);\n\n  function Confirmation(props) {\n    var _this;\n\n    _classCallCheck(this, Confirmation);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      classification: \"pants\"\n    };\n\n    _this.getRecommendations();\n\n    return _this;\n  }\n\n  _createClass(Confirmation, [{\n    key: \"getRecommendations\",\n    value: function getRecommendations() {\n      var url, text, request, info, props_navigation;\n      return _regeneratorRuntime.async(function getRecommendations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"https://www.parsehub.com/api/v2/projects/t3LXvgFShK6y/last_ready_run/data?api_key=tBbTET_aiw6F&format=json\";\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.text();\n              }).then(function (data) {\n                return text = data;\n              }).catch(function (e) {\n                return console.log(e);\n              }));\n\n            case 3:\n              request = _context.sent;\n              info = JSON.parse(text);\n              props_navigation = this.props.navigation;\n\n              if (info != undefined) {\n                console.log(info.items[1]);\n                props_navigation.navigate('Recommended', {\n                  recommendations: [info.items[0], info.items[1]]\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.statusBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Confirmation;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textConfirm: {\n    alignSelf: 'center',\n    fontSize: 50\n  },\n  statusBar: {\n    width: '100%',\n    height: StatusBar.currentHeight,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#33B8FF\"\n  }\n});\nexport default Confirmation;","map":{"version":3,"sources":["C:/Users/Spencer/Documents/GitHub/ComplementaryClothes/components/Confirmation.js"],"names":["React","Confirmation","props","state","classification","getRecommendations","url","fetch","then","response","text","data","catch","e","console","log","request","info","JSON","parse","props_navigation","navigation","undefined","items","navigate","recommendations","styles","statusBar","alignItems","justifyContent","Component","StyleSheet","create","textConfirm","alignSelf","fontSize","width","height","StatusBar","currentHeight","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAIMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;;AAIA,UAAKC,kBAAL;;AAPc;AAQjB;;;;;;;;;;AAiEOC,cAAAA,G,GAAM,4G;;+CAGWC,KAAK,CAACD,GAAD,CAAL,CACpBE,IADoB,CACf,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADO,EAEpBF,IAFoB,CAEf,UAAAG,IAAI;AAAA,uBAAID,IAAI,GAAGC,IAAX;AAAA,eAFW,EAGpBC,KAHoB,CAGd,UAAAC,CAAC;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,eAHa,C;;;AAAjBG,cAAAA,O;AAKAC,cAAAA,I,GAAOC,IAAI,CAACC,KAAL,CAAWT,IAAX,C;AAEPU,cAAAA,gB,GAAmB,KAAKlB,KAAL,CAAWmB,U;;AAClC,kBAAIJ,IAAI,IAAIK,SAAZ,EAAuB;AAanBR,gBAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACM,KAAL,CAAW,CAAX,CAAZ;AAEAH,gBAAAA,gBAAgB,CAACI,QAAjB,CAA0B,aAA1B,EAAyC;AACrCC,kBAAAA,eAAe,EAAE,CAACR,IAAI,CAACM,KAAL,CAAW,CAAX,CAAD,EAAgBN,IAAI,CAACM,KAAL,CAAW,CAAX,CAAhB;AADoB,iBAAzC;AAGH;;;;;;;;;;;6BAKK;AACN,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAIG,MAAM,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAACC,UAAAA,UAAU,EAAE,QAAb;AAAuBC,UAAAA,cAAc,EAAE;AAAvC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AASH;;;;EAtHsB7B,KAAK,CAAC8B,S;;AAyHjC,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADgB;AAK7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,MAAM,EAAEC,SAAS,CAACC,aAFX;AAGPV,IAAAA,cAAc,EAAC,QAHR;AAIPD,IAAAA,UAAU,EAAE,QAJL;AAKPY,IAAAA,eAAe,EAAE;AALV;AALkB,CAAlB,CAAf;AAcA,eAAevC,YAAf","sourcesContent":["import React from 'react';\r\nimport { View, StatusBar, StyleSheet, SafeAreaView} from 'react-native';\r\n\r\n\r\nclass Confirmation extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            classification: \"pants\" //props.navigation.state.params.classification\r\n        }\r\n\r\n        this.getRecommendations()\r\n    }\r\n\r\n    async getRecommendations() {\r\n        /*call the api to get products here with the keyword in this.state.classification. this is the onpress of the confirm*/\r\n\r\n        // Main Clothing Articles\r\n        // Pants\r\n        // Shirts\r\n        // Shoes\r\n        // Hats\r\n        // Socks\r\n\r\n        // Accessories\r\n        // Necklace\r\n        // Ring\r\n        // Watch\r\n        // Bracelet\r\n\r\n        // var urls = {\r\n        //     pants = \"https://www.parsehub.com/api/v2/projects/t3LXvgFShK6y/last_ready_run/data?api_key=tBbTET_aiw6F&format=json\",\r\n        //     shirts = \"https://www.parsehub.com/api/v2/projects/tw8p9tJXSFT5/last_ready_run/data?api_key=tBbTET_aiw6F&format=json\",\r\n        //     shoes = ,\r\n        //     hats = ,\r\n        //     socks = ,\r\n        //     necklace = ,\r\n        //     ring = ,\r\n        //     watch = ,\r\n        //     bracelet = \r\n        // }\r\n\r\n        // Main Clothing Articles\r\n        // Shoes -> Socks\r\n        // Dress -> Hats\r\n        // Top -> Pants\r\n        // Pants -> Shirts\r\n        // Hat -> Shirts\r\n\r\n        // Accessories\r\n        // Ring -> Bracelet\r\n        // Necklace -> Shirts\r\n        // Sunglasses -> Hats\r\n        // Bag -> Watch\r\n        // Necktie -> Shirts\r\n        // Earrings -> Ring\r\n        // Watch -> Ring\r\n        // Bracelet -> Ring\r\n\r\n        // var url_pairing = {\r\n        //     top = urls[\"pants\"],\r\n        //     pants = urls[\"shoes\"],\r\n        //     shoes = urls[\"socks\"],\r\n        //     socks = urls[\"hats\"],\r\n        //     hats = urls[\"shirts\"],\r\n\r\n        //     ring = urls[\"bracelet\"],\r\n        //     necklace = urls[\"shirts\"],\r\n        //     sunglasses = urls[\"hats\"],\r\n        //     bag = urls[\"watch\"],\r\n        //     necktie = urls[\"shirts\"],\r\n        //     earrings = urls[\"ring\"],\r\n        //     watch = urls[\"ring\"],\r\n        //     bracelet = urls[\"ring\"]\r\n        // }\r\n\r\n        //https://www.parsehub.com/api/v2/runs/{RUN_TOKEN}/data\r\n        var url = \"https://www.parsehub.com/api/v2/projects/t3LXvgFShK6y/last_ready_run/data?api_key=tBbTET_aiw6F&format=json\"\r\n\r\n        var text;\r\n        var request = await (fetch(url)\r\n        .then(response => response.text())\r\n        .then(data => text = data)\r\n        .catch(e => console.log(e)));\r\n\r\n        var info = JSON.parse(text);\r\n\r\n        var props_navigation = this.props.navigation\r\n        if (info != undefined) {\r\n            // var entries = info.split(\"},\");\r\n            // console.log(\"for loop\");\r\n            // for (var i = 0; i < 5; i++) {\r\n            //     var data = entries[i].split(\",\");\r\n            //     for (var j = 0; j < data.length; j++) {\r\n            //         var values = data[j].split(': ');\r\n            //         var key = values[0];\r\n            //         var value = values[1];\r\n            //         console.log(key);\r\n            //     }\r\n            // } \r\n            //console.log(text);\r\n            console.log(info.items[1]); \r\n\r\n            props_navigation.navigate('Recommended', {\r\n                recommendations: [info.items[0], info.items[1]] /*data we get back from the api */\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <View >\r\n                <SafeAreaView style = {styles.statusBar}>\r\n                </SafeAreaView>\r\n                <View style = {{alignItems: \"center\", justifyContent: \"center\"}}>\r\n                    \r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textConfirm: {\r\n        alignSelf: 'center',\r\n        fontSize: 50,\r\n    },\r\n    statusBar: {\r\n        width: '100%',\r\n        height: StatusBar.currentHeight,\r\n        justifyContent:\"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#33B8FF\",\r\n    },\r\n})\r\n\r\nexport default Confirmation;"]},"metadata":{},"sourceType":"module"}